@page
@model bodyshedule.Pages.Events.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Event</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Event.Name" class="control-label"></label>
                <input asp-for="Event.Name" class="form-control" />
                <span asp-validation-for="Event.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.Description" class="control-label"></label>
                <input asp-for="Event.Description" class="form-control" />
                <span asp-validation-for="Event.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.StartTime" class="control-label"></label>
                <input asp-for="Event.StartTime" class="form-control" />
                <span asp-validation-for="Event.StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.EndTime" class="control-label"></label>
                <input asp-for="Event.EndTime" class="form-control" />
                <span asp-validation-for="Event.EndTime" class="text-danger"></span>
            </div>
            <div id="exerciseItemsContainer">
            </div>
            <button type="button" onclick="addExerciseItem()">Add Exercise</button>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function addExerciseItem() {
            var container = $("#exerciseItemsContainer");
            var itemCount = container.children().length + 1; // Get current count

            var newItem = `
              <div class="exercise-item">
                <div class="form-group">
                  <label>Exercise ${itemCount} Title:</label>
                  <input type="text" name="ExerciseItem.${itemCount}.Title" />
                </div>
                <div class="form-group">
                  <label>Exercise ${itemCount} QuantityApproaches:</label>
                  <input type="number" name="ExerciseItem.${itemCount}.QuantityApproaches" />
                </div>
                 <div class="form-group">
                  <label>Exercise ${itemCount} QuantityRepetions:</label>
                  <input type="number" name="ExerciseItem.${itemCount}.QuantityRepetions" />
                </div>
                <button type="button" onclick="$(this).parent().remove()">Remove Exercise</button>
              </div>`;

            container.append(newItem);
        }
    </script>
}


